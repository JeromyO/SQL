-- In this SQL project, I've utilized various queries to extract valuable customer-oriented data from a database, demonstrating practical database querying skills.

-- Show Customers who are not in the US?
SELECT FirstName, LastName, CustomerID, Country
FROM chinook.customers
WHERE Country != 'USA';

-- Show only Customers from USA. 
SELECT FirstName, LastName, CustomerID, Country
FROM chinook.customers
WHERE Country = 'USA';

-- Find the Invoices of customers who are from Brazil. 
SELECT cust.FirstName, cust.LastName, cust.Country, inv.InvoiceID, inv.InvoiceDate
FROM chinook.customers cust
INNER JOIN chinook.invoices inv
ON cust.CustomerID = inv.CustomerID 
WHERE cust.country = 'Brazil';

-- Show the Employees who are Sales Agents. 
SELECT *
FROM chinook.employees
WHERE Title = 'Sales Support Agent';

-- Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM chinook.invoices;

-- Provide a query that shows the invoices associated with each sales agent. 
SELECT em.FirstName, em.LastName, em.EmployeeID, cust.SupportRepID, cust.CustomerID, inv.customerID
FROM chinook.employees em
JOIN chinook.customers cust
ON cust.SupportRepID = em.EmployeeID
JOIN chinook.invoices inv 
ON inv.customerID = cust.CustomerID;

-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT em.LastName, em.Firstname, c.FirstName, c.LastName, c.Country, inv.total
FROM chinook.employees em
JOIN chinook.Customers c 
ON c.SupportRepId = em.EmployeeId
JOIN chinook.Invoices inv 
ON inv.CustomerId = c.CustomerId;

-- How many Invoices were there in 2010?
SELECT COUNT(*)
FROM chinook.Invoices
WHERE InvoiceDate 
BETWEEN '2010-01-01' AND '2010-12-31';

-- What are the total sales for 2011?
SELECT SUM(Total) AS 'Tota Sales 2011'
FROM chinook.Invoices
WHERE InvoiceDate 
BETWEEN '2011-01-01' AND '2011-12-31';

-- Write a query that includes the purchased track name with each invoice line ID.
SELECT t.Name AS 'Track Name', inv.InvoiceLineId AS 'Invoice ID'
FROM chinook.Invoice_items inv
JOIN chinook.Tracks t 
ON inv.TrackId = t.TrackId;

-- Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT art.name as Artist, t.Name as 'Track Name', inv.InvoiceLineId AS 'Invoice ID'
FROM chinook.Invoice_items inv
LEFT JOIN chinook.tracks t 
ON inv.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists art
ON art.ArtistID=a.ArtistID;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
ON a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m
ON m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
ON g.GenreId = t.GenreId;

-- Show the total sales made by each sales agent.
SELECT em.FirstName, em.LastName, em.EmployeeID,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees em
JOIN chinook.Customers c 
ON c.SupportRepId = em.EmployeeId
JOIN chinook.Invoices inv 
ON inv.CustomerId = c.CustomerId
WHERE em.Title = 'Sales Support Agent' 
GROUP BY em.FirstName;

-- Which sales agent made the most dollars in sales in 2009?
SELECT em.FirstName, em.Lastname, ROUND(SUM(inv.total), 2) AS 'Total Sales'
FROM chinook.Employees em
JOIN chinook.Customers c 
ON c.SupportRepID = em.EmployeeID
JOIN chinook.Invoices inv 
ON inv.CustomerId = c.CustomerId
WHERE em.Title = 'Sales Support Agent' 
AND inv.InvoiceDate LIKE '2009%' 
GROUP BY em.FirstName
ORDER BY (round(sum(inv.Total), 2))  DESC LIMIT 1;
