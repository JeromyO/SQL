-- In this SQL project, I wanted to practice some more queries. I downloaded Spotify data from Kaggle then I created a table to insert that data into. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

-- I also got in the habit of querying the database initially to see what is in the table. 
SELECT *
FROM BIT_DB.Spotifydata;

-- What are the top 10 most popular songs?
SELECT artist_name as Artist, track_name as songs, popularity
FROM BIT_DB.Spotifydata
ORDER BY Popularity DESC
LIMIT 10;

-- What is the average energy by artist and track?
SELECT artist_name as Artist, track_name as Song, AVG(energy)
FROM BIT_DB.Spotifydata
GROUP BY Artist, Song;

-- What artist released the shortest song?
SELECT artist_name as Artist, track_name as Song, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms ASC
LIMIT 5;

-- What artist released the most danceability song? 
SELECT artist_name as Artist, track_name as Song, MAX(danceability)
FROM BIT_DB.Spotifydata;
